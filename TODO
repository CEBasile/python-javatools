
- move the pretty_* methods out of __init__.py and into javap.py or
  some-such.

- expand the verbosity of classdiff

- perhaps diff-like opcode output for method code? That would be a bit
  of an undertaking; would it be at all worth it?

- make jardiff understand META-INF magic files

- give jardiff a meaningful return code

- a class or class-member attribute discovery script

- switch to using logging instead of print statements for output (bad idea?)

- dependency discovery ie: given a class or set of classes generate
  the list of classes and members expected

- fill in more docstrings with meaningful explanations

- classdeps tool to display all of the class, field, method dependencies

- jardeps tool to do the same as classdeps, but for an entire JAR

- options to classdeps and jardeps to attempt to fulfill dependencies
  (possibly recursively) from discoverable locations (JAVA_HOME,
  CLASSPATH, etc) and output missing deps

- figure out how Jar signing works, and write a verify utility

#